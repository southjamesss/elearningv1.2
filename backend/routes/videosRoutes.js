const express = require("express");
const { PrismaClient } = require("@prisma/client");

const router = express.Router();
const prisma = new PrismaClient();

// üìå GET /api/videos - ‡∏î‡∏∂‡∏á‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
router.get("/", async (req, res) => {
  try {
    const videos = await prisma.video.findMany();
    res.json(videos);
  } catch (error) {
    res.status(500).json({ error: "‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡πÑ‡∏î‡πâ", details: error.message });
  }
});

// üìå POST /api/videos - ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡πÉ‡∏´‡∏°‡πà
router.post("/", async (req, res) => {
  try {
    console.log("üì• ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö:", req.body); // ‚úÖ Debug ‡πÄ‡∏ä‡πá‡∏Ñ‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡∏°‡∏≤

    const { title, url, description } = req.body;
    if (!title || !url || !description) {
      return res.status(400).json({ error: "‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö (title, url, description)" });
    }

    const newVideo = await prisma.video.create({
      data: { title, url, description },
    });

    console.log("‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:", newVideo);
    res.status(201).json(newVideo);
  } catch (error) {
    console.error("‚ùå ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:", error);
    res.status(500).json({ error: "‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡πÑ‡∏î‡πâ" });
  }
});

// üìå PUT /api/videos/:id - ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠
router.put("/:id", async (req, res) => {
  try {
    const { id } = req.params;
    const { title, url, description } = req.body;

    if (!title || !url || !description) {
      return res.status(400).json({ error: "‚ùå ‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏∏ title, url ‡πÅ‡∏•‡∏∞ description" });
    }

    const video = await prisma.video.update({ 
      where: { id },
      data: { title, url, description }
    });

    res.json(video);
  } catch (error) {
    res.status(500).json({ error: "‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡πÑ‡∏î‡πâ", details: error.message });
  }
});

// üìå DELETE /api/videos/:id - ‡∏•‡∏ö‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠
router.delete("/:id", async (req, res) => {
  try {
    const { id } = req.params;

    await prisma.video.delete({ where: { id } });

    res.json({ message: "‚úÖ ‡∏•‡∏ö‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à" });
  } catch (error) {
    res.status(500).json({ error: "‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡πÑ‡∏î‡πâ", details: error.message });
  }
});

module.exports = router;